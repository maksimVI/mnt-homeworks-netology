---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Download Clickhouse
      block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            mode: "0644"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib (rescue)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: "0644"

    - name: Install clickhouse packages
      become: true
      ansible.builtin.dnf:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true

    - name: Clickhouse | Modify config.xml | Listen all address
      become: true
      ansible.builtin.replace:
        backup: true
        path: "/etc/clickhouse-server/config.xml"
        regexp: '^    <!-- <listen_host>0.0.0.0</listen_host> -->$'
        replace: '    <listen_host>0.0.0.0</listen_host>'

    - name: Clickhouse | Modify users.xml | Add user netology
      become: true
      ansible.builtin.template:
        src: clickhouse.users.j2
        dest: "/etc/clickhouse-server/users.xml"
        mode: 0644
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clickhouse | Create database
      ansible.builtin.command: "clickhouse-client -h {{ ansible_default_ipv4.address }} --user={{ clickhouse_user }} --password={{ clickhouse_password }} -q 'create database {{ clickhouse_database_name }};'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0
    
    - name: Clickhouse | Create log table
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - -h
          - "{{ ansible_default_ipv4.address }}"
          - --user
          - "{{ clickhouse_user }}"
          - --password
          - "{{ clickhouse_password }}"
          - --database
          - "{{ clickhouse_database_name }}"
          - -q 
          - |
            {{ clickhouse_create_table }}
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57
      changed_when: create_table.rc == 0
  tags: install_clickhouse

- name: Install Vector
  hosts: vector
  handlers:
    - name: Vector | Restart service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
        daemon_reload: true
  tasks:
    - name: Vector | Download
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "./vector-{{ vector_version }}-1.x86_64.rpm"
        mode: "0644"
    - name: Vector | Install packages
      become: true
      ansible.builtin.dnf:
        name: "vector-{{ vector_version }}-1.x86_64.rpm"
        disable_gpg_check: true
    - name: Vector | Template config
      become: true
      ansible.builtin.template:
        src: vector.yml.j2
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --no-environment --config-yaml %s
    - name: Vector | Create systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /usr/lib/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        backup: true
      notify: Vector | Restart service
  tags: install_vector

- name: Install lighthouse
  hosts: lighthouse
  handlers:
    - name: Nginx | Restart
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted

  tasks:
    - name: NGINX | Install epel-release
      become: true
      ansible.builtin.package:      # Универсальный модуль, работает и с dnf, и с yum, и с apt
        name: epel-release
        state: present

    - name: NGINX | Install NGINX
      become: true
      ansible.builtin.package:
        name: nginx
        state: present

    - name: NGINX | Create config
      become: true
      ansible.builtin.template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        mode: "0644"

    - name: Unzip | Install
      become: true
      ansible.builtin.package:
        name: unzip
        state: present

    - name: Lightkhouse | Directory exists
      ansible.builtin.file:
        path: "{{ lighthouse_location_dir }}"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: "0755"

    - name: Lightkhouse | Get archive
      ansible.builtin.get_url:
        url: "{{ lighthouse_link_zip }}"
        dest: "{{ lighthouse_location_dir }}/lighthouse.zip"
        mode: "0644"

    - name: Lighthouse | Unpack archive
      become: true
      ansible.builtin.unarchive:
        src: "{{ lighthouse_location_dir }}/lighthouse.zip"
        dest: /usr/share/nginx
        remote_src: true

    - name: Lighthouse | Create config
      become: true
      ansible.builtin.template:
        src: templates/lighthouse.conf.j2
        dest: "/etc/nginx/conf.d/lighthouse.conf"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: "0664"
      notify: Nginx | Restart
  tags: install_lighthouse

  post_tasks:
    - name: Lighthouse | User URL
      debug:
        msg: "http://{{ hostvars['lighthouse-01'].ansible_host }}/#http://{{ hostvars['clickhouse-01'].ansible_host }}:8123/?user={{ clickhouse_user }}"
